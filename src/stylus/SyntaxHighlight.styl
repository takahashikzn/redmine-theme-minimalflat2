// Syntax hilight

syntax_color_base       = #fff
syntax_color_gray       = #F1F1F0
syntax_color_red        = #DA6A67
syntax_color_purple     = #DAACDF
syntax_color_blue       = #7FAAC6
syntax_color_blue_light = #C9DFFE
syntax_color_green      = #B4C978
syntax_color_yellow     = #E7BC79

.syntaxhl {
  div {
    display inline
  }

  .line-numbers {
    padding .1em .2em
    margin 0 .2em 0 0
    color syntax_color_base;
  }

  .code pre {
    overflow auto
  }

  .debug {
    color syntax_color_base !important
    background syntax_color_blue !important
  }

  .insert {
    background hsla(120,100%,50%,0.12)

    .insert {
      color syntax_color_green
      background transparent
      font-weight: bold
    }

    .eyecatcher {
      background-color hsla(120,100%,50%,0.2)
      border 1px solid hsla(120,100%,25%,0.5)
      margin -1px
      border-top none
      border-bottom-left-radius 5px
      border-bottom-right-radius 5px
    }
  }

  .delete {
    background: hsla(0,100%,50%,0.12)

    .delete {
      color syntax_color_red
      background transparent
      font-weight bold
    }

    .eyecatcher {
      background-color: hsla(0,100%,50%,0.2);
      border: 1px solid hsla(0,100%,45%,0.5);
      margin: -1px;
      border-bottom: none;
      border-top-left-radius: 5px;
      border-top-right-radius: 5px;
    }
  }

  .change {
    color syntax_color_blue
    background: syntax_color_blue

    .change {
      color syntax_color_blue_light
    }
  }

  .head {
    color syntax_color_purple
    background syntax_color_purple

    .filename {
      color syntax_color_white
    }

    .head {
      color #DAACDF
    }
  }

  .annotation          { color: syntax_color_blue; }
  .attribute-name      { color: syntax_color_yellow; }
  .attribute-value     { color: syntax_color_green; }
  .binary              { color: syntax_color_purple; }
  .binary .char        { color: #325 }
  .binary .delimiter   { color: #325 }
  .char .content       { color: syntax_color_red; }
  .char .delimiter     { color: syntax_color_red; }
  .char                { color: syntax_color_red; }
  .class               { color: syntax_color_blue_light; }
  .class-variable      { color: syntax_color_green; }
  .color               { color: syntax_color_green; }
  .comment             { color: syntax_color_green; }
  .comment .char       { color: syntax_color_green; }
  .comment .delimiter  { color: syntax_color_green; }
  .complex             { color: syntax_color_purple; }
  .constant            { color: syntax_color_purple; }
  .decorator           { color: syntax_color_purple;}
  .definition          { color: syntax_color_green; }
  .delimiter           { color: syntax_color_gray; }
  .directive           { color: syntax_color_purple; }
  .doc                 { color: syntax_color_yellow; }
  .doc-string          { color: syntax_color_red; }
  .docstring           { color: syntax_color_red; }
  .doctype             { color: syntax_color_blue }
  .done                { color: color_gray; text-decoration: line-through; }
  .entity              { color: syntax_color_red; }
  .error               { color: syntax_color_red; }
  .escape              { color: syntax_color_gray; }
  .exception           { color: syntax_color_red; }
  .float               { color: syntax_color_red; }
  .function            { color: syntax_color_blue; }
  .function .delimiter { color: syntax_color_blue; }
  .global-variable     { color: syntax_color_yellow; }
  .hex                 { color: syntax_color_blue; }
  .id                  { color: syntax_color_blue; }
  .imaginary           { color: syntax_color_red; }
  .id                  { color: syntax_color_yellow; }
  .include             { color: syntax_color_red; }
  .inline              { color: syntax_color_gray; }
  .inline-delimiter    { color: syntax_color_gray; }
  .instance-variable   { color: syntax_color_blue; }
  .integer             { color: syntax_color_red; }
  .imaginary           { color: syntax_color_red; }
  .important           { color: syntax_color_red; }
  .key                 { color: syntax_color_green; }
  .key .char           { color: syntax_color_blue; }
  .key .delimiter      { color: syntax_color_green; }
  .keyword             { color: syntax_color_purple; }
  .label               { color: syntax_color_yellow; }
  .local-variable      { color: syntax_color_red; }
  .map .content        { color: syntax_color_purple; }
  .map .delimiter      { color: syntax_color_purple; }
  .namespace           { color: syntax_color_purple; }
  .octal               { color: syntax_color_blue; }
  .operator            { }
  .predefined          { color: syntax_color_blue; }
  .predefined-constant { color: syntax_color_blue; }
  .predefined-type     { color: syntax_color_blue; }
  .preprocessor        { color: syntax_color_blue; }
  .pseudo-class        { color: syntax_color_blue; }
  .regexp .content     { color: syntax_color_green; }
  .regexp .delimiter   { color: syntax_color_purple; }
  .regexp .modifier    { color: syntax_color_purple; }
  .regexp              { }
  .reserved            { color: syntax_color_green; }
  .shell .content      { color: syntax_color_green; }
  .shell .delimiter    { color: syntax_color_green; }
  .shell               { }
  .string .char        { color: syntax_color_green; }
  .string .content     { color: syntax_color_green; }
  .string .delimiter   { color: syntax_color_green; }
  .string .modifier    { color: syntax_color_green; }
  .symbol              { color: syntax_color_red; }
  .symbol .content     { color: syntax_color_red; }
  .symbol .delimiter   { color: syntax_color_red; }
  .symbol              { color: syntax_color_red; }
  .tag                 { color: syntax_color_purple; }
  .type                { color: syntax_color_blue; }
  .value               { color: syntax_color_red; }
  .variable            { color: syntax_color_blue; }
}
